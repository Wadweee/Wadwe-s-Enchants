#SELECT THE OPTIONS TO ENCHANT OR GET MORE BOOKS
function EnchantmentGui(player: player):
   set metadata tag "EnchantmentGui" of {_player} to chest inventory with 3 rows named "Select"
   set slots 10 of metadata tag "EnchantmentGui" of {_player} to anvil named "Enchant" with lore "Combine items and enchanted books"
   set slots 12 of metadata tag "EnchantmentGui" of {_player} to enchanting table named "Get Books" with lore "Get new books to enchant with"
   set slots 16 of metadata tag "EnchantmentGui" of {_player} to book and quill named "Info" with lore "See all books"
   open (metadata tag "EnchantmentGui" of {_player}) to {_player}
   set {InvOpen.%{_player}%} to true

#GUI TO ENCHANT ITEMS
function Enchant(player: player):
   set metadata tag "Enchant" of {_player} to chest inventory with 3 rows named "Enchant"
   set slots 1,2,3,10,12,19,20,21 of metadata tag "Enchant" of {_player} to black stained glass pane named "Put item here"
   set slots 5,6,7,14,16,23,24,25 of metadata tag "Enchant" of {_player} to blue stained glass pane named "Put enchant book here"
   set slot 22 of metadata tag "Enchant" of {_player} to anvil named "ENCHANT"
   set slots 26 of metadata tag "Enchant" of {_player} to red stained glass pane named "Leave"
   open (metadata tag "Enchant" of {_player}) to {_player}
   set {InvOpen.%{_player}%} to true
   set {EnchantInv.%{_player}%} to true
   
#SELECT THE LUCK OF YOUR BOOK ODDS
function SelectRarity(player: player):
   set metadata tag "SelectRarity" of {_player} to chest inventory with 3 rows named "Get Books"
   set slots 4 of metadata tag "SelectRarity" of {_player} to oak sign named "Different Rarities will give different odds"
   set slots 10 of metadata tag "SelectRarity" of {_player} to block of coal named "Normal" with lore "10 Levels"
   set slots 12 of metadata tag "SelectRarity" of {_player} to block of iron named "Lucky" with lore "15 Levels"
   set slots 14 of metadata tag "SelectRarity" of {_player} to block of gold named "Very Lucky" with lore "25 Levels"
   set slots 16 of metadata tag "SelectRarity" of {_player} to block of diamond named "SUPER LUCKY" with lore "35 Levels"
   set slots 26 of metadata tag "SelectRarity" of {_player} to red stained glass pane named "Leave"
   open (metadata tag "SelectRarity" of {_player}) to {_player}
   set {InvOpen.%{_player}%} to true

#GUI TO SEE ALL THE BOOKS
function Info(player: player):
   set metadata tag "Info" of {_player} to chest inventory with 3 rows named "Info"
   set slots 0 of metadata tag "Info" of {_player} to diamond sword named "weapons"
   set slots 2 of metadata tag "Info" of {_player} to diamond sword named "swords"
   set slots 3 of metadata tag "Info" of {_player} to bow named "bows"
   set slots 4 of metadata tag "Info" of {_player} to crossbow named "crossbows"
   set slots 5 of metadata tag "Info" of {_player} to trident named "tridents"
   set slots 6 of metadata tag "Info" of {_player} to fishing rod named "fishing rods"
   set slots 9 of metadata tag "Info" of {_player} to diamond pickaxe named "tools"
   set slots 11 of metadata tag "Info" of {_player} to diamond pickaxe named "pickaxes"
   set slots 12 of metadata tag "Info" of {_player} to diamond axe named "axes"
   set slots 13 of metadata tag "Info" of {_player} to diamond shovel named "shovels"
   set slots 14 of metadata tag "Info" of {_player} to diamond hoe named "hoes"
   set slots 15 of metadata tag "Info" of {_player} to shield named "shields"
   set slots 18 of metadata tag "Info" of {_player} to diamond chestplate named "armor"
   set slots 20 of metadata tag "Info" of {_player} to diamond helmet named "helmets"
   set slots 21 of metadata tag "Info" of {_player} to diamond chestplates named "chestplates"
   set slots 22 of metadata tag "Info" of {_player} to diamond leggings named "leggings"
   set slots 23 of metadata tag "Info" of {_player} to diamond boots named "boots"
   set slots 24 of metadata tag "Info" of {_player} to elytra named "elytras"
   set slots 26 of metadata tag "Info" of {_player} to red stained glass pane named "Leave"
   open (metadata tag "Info" of {_player}) to {_player}
   set {InvOpen.%{_player}%} to true

#SHOWS THE RIGHT BOOKS
function ShowBooks(player: player, type: string):
   set metadata tag "ShowBooks" of {_player} to chest inventory with 3 rows named "Enchants"
   set slots 26 of metadata tag "ShowBooks" of {_player} to red stained glass pane named "Leave"
   if {_type} is "weapons":
      stop
   else if {_type} is "swords":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Smite" with lore "Chance to electrocute your enemy%nl%common, uncommon, rare"
      set slots 1 of metadata tag "ShowBooks" of {_player} to enchanted book named "Cripple" with lore "Chance to give your enemy slowness%nl%common, uncommon"
      set slots 2 of metadata tag "ShowBooks" of {_player} to enchanted book named "Butcher" with lore "Get more meat on kill%nl%common, uncommon, rare"
      set slots 3 of metadata tag "ShowBooks" of {_player} to enchanted book named "Bleed" with lore "Cut your enemy each hit dealing extra damage%nl%uncommon, rare, epic"
      set slots 4 of metadata tag "ShowBooks" of {_player} to enchanted book named "Reap" with lore "Chance to heal on attack%nl%uncommon, rare, epic"
      set slots 5 of metadata tag "ShowBooks" of {_player} to enchanted book named "Rage" with lore "Do more damage the less health you have%nl%epic, legendary"
      set slots 6 of metadata tag "ShowBooks" of {_player} to enchanted book named "Bloodlust" with lore "Each kill gives you stat boosts%nl%rare, epic, legendary"
   else if {_type} is "bows":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Poison" with lore "Poison the enemy on hit%nl%common, uncommon, rare"
      set slots 1 of metadata tag "ShowBooks" of {_player} to enchanted book named "Velocity" with lore "Arrows travel thurther and faster%nl%common, uncommon, rare"
      set slots 2 of metadata tag "ShowBooks" of {_player} to enchanted book named "Thunderstorm" with lore "Rain down lightning onto your arrow%nl%legendary"
   else if {_type} is "crossbows":
      stop
   else if {_type} is "tridents":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Storm" with lore "Rain down tridents%nl%epic, legendary"
   else if {_type} is "shields":
      stop
   else if {_type} is "tools":
      stop
   else if {_type} is "pickaxes":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Excavator" with lore "Mine lots of blocks%nl%rare, epic, legendary"
   else if {_type} is "axes":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Leap" with lore "Jump a far distance%nl%rare, epic"
   else if {_type} is "shovels":
      stop
   else if {_type} is "hoes":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Replant" with lore "Replant crops%nl%epic"
   else if {_type} is "fishing rods":
      stop
   else if {_type} is "armor":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Replenish" with lore "Get some durability on kill%nl%uncommon"
   else if {_type} is "helmets":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Supervision" with lore "Gives night vision%nl%common"
   else if {_type} is "chestplates":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Tank" with lore "Increases health%nl%rare, epic, legendary"
      set slots 1 of metadata tag "ShowBooks" of {_player} to enchanted book named "Revenge" with lore "Explode on death%nl%epic"
   else if {_type} is "leggings":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Healthy" with lore "Gives regen%nl%epic"
   else if {_type} is "boots":
      set slots 0 of metadata tag "ShowBooks" of {_player} to enchanted book named "Bunny" with lore "Gives jump boost%nl%common"
      set slots 1 of metadata tag "ShowBooks" of {_player} to enchanted book named "Sonic" with lore "Gives speed%nl%uncommon, rare"
   else if {_type} is "elytras":
      stop
   open (metadata tag "ShowBooks" of {_player}) to {_player}
   set {InvOpen.%{_player}%} to true

#GIVES THE PLAYER A RANDOM COMMON BOOK
function GetCommon(player: player, Chance: integer):
   if {_Chance} is 0:
      set {_Chance} to random integer between 1 and 7
   if {_Chance} is 1:
      give {_player} enchanted book named "Smite I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 2:
      give {_player} enchanted book named "Supervision" with lore "--Wadwe's Enchantments--%nl%helmet"
   if {_Chance} is 3:
      give {_player} enchanted book named "Bunny" with lore "--Wadwe's Enchantments--%nl%boots"
   if {_Chance} is 4:
      give {_player} enchanted book named "Poison I" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 5:
      give {_player} enchanted book named "Velocity I" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 6:
      give {_player} enchanted book named "Cripple I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 7:
      give {_player} enchanted book named "Butcher I" with lore "--Wadwe's Enchantments--%nl%sword"

#GIVES THE PLAYER A RANDOM UNCOMMON BOOK
function GetUncommon(player: player, Chance: integer):
   if {_Chance} is 0:
      set {_Chance} to random integer between 1 and 8
   if {_Chance} is 1:
      give {_player} enchanted book named "Smite II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 2:
      give {_player} enchanted book named "Reap I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 3:
      give {_player} enchanted book named "Sonic I" with lore "--Wadwe's Enchantments--%nl%boots"
   if {_Chance} is 4:
      give {_player} enchanted book named "Poison II" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 5:
      give {_player} enchanted book named "Bleed I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 6:
      give {_player} enchanted book named "Velocity II" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 7:
      give {_player} enchanted book named "Cripple II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 8:
      give {_player} enchanted book named "Butcher II" with lore "--Wadwe's Enchantments--%nl%sword"

#GIVES THE PLAYER A RANDOM RARE BOOK
function GetRare(player: player, Chance: integer):
   if {_Chance} is 0:
      set {_Chance} to random integer between 1 and 12
   if {_Chance} is 1:
      give {_player} enchanted book named "Smite III" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 2:
      give {_player} enchanted book named "Reap II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 3:
      give {_player} enchanted book named "Tank I" with lore "--Wadwe's Enchantments--%nl%chestplate"
   if {_Chance} is 4:
      give {_player} enchanted book named "Sonic II" with lore "--Wadwe's Enchantments--%nl%boots"
   if {_Chance} is 5:
      give {_player} enchanted book named "Poison III" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 6:
      give {_player} enchanted book named "Bleed II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 7:
      give {_player} enchanted book named "Leap I" with lore "--Wadwe's Enchantments--%nl%axe"
   if {_Chance} is 8:
      give {_player} enchanted book named "Bloodlust I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 9:
      give {_player} enchanted book named "Velocity III" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 10:
      give {_player} enchanted book named "Excavator I" with lore "--Wadwe's Enchantments--%nl%pickaxe"
   if {_Chance} is 11:
      give {_player} enchanted book named "Butcher III" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 12:
      give {_player} enchanted book named "Replenish" with lore "--Wadwe's Enchantments--%nl%armor"
#GIVES THE PLAYER A RANDOM EPIC BOOK
function GetEpic(player: player, Chance: integer):
   if {_Chance} is 0:
      set {_Chance} to random integer between 1 and 11
   if {_Chance} is 1:
      give {_player} enchanted book named "Reap III" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 2:
      give {_player} enchanted book named "Tank II" with lore "--Wadwe's Enchantments--%nl%chestplate"
   if {_Chance} is 3:
      give {_player} enchanted book named "Healthy" with lore "--Wadwe's Enchantments--%nl%leggings"
   if {_Chance} is 4:
      give {_player} enchanted book named "Bleed III" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 5:
      give {_player} enchanted book named "Leap II" with lore "--Wadwe's Enchantments--%nl%axe"
   if {_Chance} is 6:
      give {_player} enchanted book named "Bloodlust II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 7:
      give {_player} enchanted book named "Revenge" with lore "--Wadwe's Enchantments--%nl%chestplate"
   if {_Chance} is 8:
      give {_player} enchanted book named "Excavator II" with lore "--Wadwe's Enchantments--%nl%pickaxe"
   if {_Chance} is 9:
      give {_player} enchanted book named "Rage I" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 10:
      give {_player} enchanted book named "Replant" with lore "--Wadwe's Enchantments--%nl%hoe"
   if {_Chance} is 11:
      give {_player} enchanted book named "Storm I" with lore "--Wadwe's Enchantments--%nl%trident"
#GIVES THE PLAYER A RANDOM LEGENDARY BOOK
function GetLegendary(player: player, Chance: integer):
   if {_Chance} is 0:
      set {_Chance} to random integer between 1 and 6
   if {_Chance} is 1:
      give {_player} enchanted book named "Tank III" with lore "--Wadwe's Enchantments--%nl%chestplate"
   if {_Chance} is 2:
      give {_player} enchanted book named "Thunderstorm" with lore "--Wadwe's Enchantments--%nl%bow"
   if {_Chance} is 3:
      give {_player} enchanted book named "Bloodlust III" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 4:
      give {_player} enchanted book named "Excavator III" with lore "--Wadwe's Enchantments--%nl%pickaxe"
   if {_Chance} is 5:
      give {_player} enchanted book named "Rage II" with lore "--Wadwe's Enchantments--%nl%sword"
   if {_Chance} is 6:
      give {_player} enchanted book named "Storm II" with lore "--Wadwe's Enchantments--%nl%trident"
#SELECTS THE RARITY OF THE BOOK
function GetBook(player: player, Rarity: string, Chances: objects):
   set {_Chance} to random integer between 0 and 100
   if {_Chance} is smaller than or equal to {_Chances::1}:
      GetCommon({_player}, 0)
   else if {_Chance} is smaller than or equal to  {_Chances::2}:
      GetUncommon({_player}, 0)
   else if {_Chance} is smaller than or equal to  {_Chances::3}:
      GetRare({_player}, 0)
   else if {_Chance} is smaller than or equal to  {_Chances::4}:
      GetEpic({_player}, 0)
   else if {_Chance} is smaller than or equal to  {_Chances::5}:
      GetLegendary({_player}, 0) 

#OPENS THE GUI
command /WadweEnchant:
   trigger:
      EnchantmentGui(player)

command /book <integer> <integer>:
   trigger:
      set {Rarity} to arg-1
      set {Book} to arg-2
      if player has permission "OP":
         if {Rarity} is 1:
            GetCommon(player, {Book})
         else if {Rarity} is 2:
            GetUncommon(player, {Book})
         else if {Rarity} is 3:
            GetRare(player, {Book})
         else if {Rarity} is 4:
            GetEpic(player, {Book})
         else if {Rarity} is 5:
            GetLegendary(player, {Book}) 

#INVENTORY STUFF
on inventory click:
   if {InvOpen.%player%} is true:
      cancel event
      wait 2 ticks

   #OPTIONS TO ENCHANT OR GET MORE BOOKS
   if event-inventory is (metadata tag "EnchantmentGui" of player):
      if index of event-slot is 10:
         Enchant(player)
      if index of event-slot is 12:
         SelectRarity(player)
      if index of event-slot is 16:
         Info(player)

   #OPTIONS TO CHANGE YOUR ODDS
   if event-inventory is (metadata tag "SelectRarity" of player):
      #COMMON
      if index of event-slot is 10:
         if the player's level is greater than 10:
            reduce the player's level by 10
            set {Chances::*} to 75,90,96,99 and 100
            GetBook(player, "Normal", {Chances::*})
      #UNCOMMON
      if index of event-slot is 12:
         if the player's level is greater than 15:
            reduce the player's level by 15
            set {Chances::*} to 55,85,95,99 and 100
            GetBook(player, "Lucky", {Chances::*})
      #RARE
      if index of event-slot is 14:
         if the player's level is greater than 25:
            reduce the player's level by 25
            set {Chances::*} to 25,75,90,98  and 100
            GetBook(player, "Very Lucky", {Chances::*})
      #EPIC
      if index of event-slot is 16:
         if the player's level is greater than 35:
            reduce the player's level by 35
            set {Chances::*} to 10,50,80,95 and 100
            GetBook(player, "SUPER LUCKY", {Chances::*})
      if index of event-slot is 26:
         EnchantmentGui(player)

   #VALIDATES THE ENCHANT
   if event-inventory is (metadata tag "Enchant" of player):
      if event-slot is 11:
         add event-slot to player's inventory
         set slot 11 of event-inventory to air
      if event-slot is 15:
         add event-slot to player's inventory
         set slot 15 of event-inventory to air
      else if index of event-slot is 22:
         if slots 15 and 11 of event-inventory don't contain air:
            set {Enchant} to false
            if {EnchantLore::2} contains "sword":
               if slot 11 of event-inventory isn't a sword:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "bow":
               if slot 11 of event-inventory isn't a bow:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "crossbow":
               if slot 11 of event-inventory isn't a crossbow:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "trident":
               if slot 11 of event-inventory isn't a trident:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "shield":
               if slot 11 of event-inventory isn't a shield:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "pickaxe":
               if slot 11 of event-inventory isn't a pickaxe:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "axe":
               if slot 11 of event-inventory isn't an axe:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "shovel":
               if slot 11 of event-inventory isn't a shovel:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "hoe":
               if slot 11 of event-inventory isn't a hoe:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "fishing rod":
               if slot 11 of event-inventory isn't a fishing rod:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "armor":
               if slot 11 of event-inventory isn't a helmet or a chestplate or leggings or boots:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "helmet":
               if slot 11 of event-inventory isn't a helmet:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "chestplate":
               if slot 11 of event-inventory isn't a chestplate:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "leggings":
               if slot 11 of event-inventory isn't leggings:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "boots":
               if slot 11 of event-inventory isn't boots:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true
            else if {EnchantLore::2} contains "elytra":
               if slot 11 of event-inventory isn't an elytra:
                  play sound "block.anvil.place"
                  give player slot 15 of metadata tag "Enchant" of player
                  set slot 15 of metadata tag "Enchant" of player to air
               else:
                  set {Enchant} to true

            if {Enchant} is true:
               #CHECKS TO SEE IF THE ENCHANT IS ALREADY ON THE SWORD
               set {TestFail} to false
               set {Check::*} to {EnchantName} split at " "
               loop {ItemLore::*}:
                  set {Test::*} to loop-value split at " "
                  if {Test::1} contains {Check::1}: 
                     set {TestFail} to true
                     play sound "block.anvil.place"
                     give player slot 15 of metadata tag "Enchant" of player
                     set slot 15 of metadata tag "Enchant" of player to air
                     stop loop
               if {TestFail} is false:
                  play sound "block.anvil.use"
                  add {EnchantName} to lore of slot 11 of event-inventory
                  add slot 11 of event-inventory to player's inventory
                  set slots 11 and 15 of event-inventory to air
         else:
            play sound "block.anvil.place"
            give player slot 15 of metadata tag "Enchant" of player
            set slot 15 of metadata tag "Enchant" of player to air
      else if index of event-slot is 26:
         EnchantmentGui(player)
   
   #ALLOWS YOU TO ADD AND REMOVE ITEMS
   if {EnchantInv.%player%} is true:
      if event-inventory isn't (metadata tag "Enchant" of player):
         if event-slot's lore contains "--Wadwe's Enchantments--":
            set {EnchantLore::*} to event-slot's lore
            set {EnchantName} to name of event-slot
            set {EnchantTemp} to slot 15 of metadata tag "Enchant" of player
            set slot 15 of metadata tag "Enchant" of player to event-slot
            set event-slot to {EnchantTemp}
         else:
            set {ItemLore::*} to event-slot's lore
            set {ItemTemp} to slot 11 of metadata tag "Enchant" of player
            set slot 11 of metadata tag "Enchant" of player to event-slot
            set event-slot to {ItemTemp}
            if slot 11 of metadata tag "Enchant" of player is anvil named "Enchant" with lore "Combine items and enchanted books":
               set slot 11 of metadata tag "Enchant" of player to air

   #PICK WHAT TYPE OF BOOKS YOU WANT
   if event-inventory is (metadata tag "Info" of player):
      if index of event-slot is 0:
         ShowBooks(player, "weapons")
      if index of event-slot is 2:
         ShowBooks(player, "swords")
      if index of event-slot is 3:
         ShowBooks(player, "bows")
      if index of event-slot is 4:
         ShowBooks(player, "crossbows")
      if index of event-slot is 5:
         ShowBooks(player, "tridents")
      if index of event-slot is 6:
         ShowBooks(player, "fishing rods")
      if index of event-slot is 9:
         ShowBooks(player, "tools")
      if index of event-slot is 11:
         ShowBooks(player, "pickaxes")
      if index of event-slot is 12:
         ShowBooks(player, "axes")
      if index of event-slot is 13:
         ShowBooks(player, "shovels")
      if index of event-slot is 14:
         ShowBooks(player, "hoes")
      if index of event-slot is 15:
         ShowBooks(player, "shields")
      if index of event-slot is 18:
         ShowBooks(player, "armor")
      if index of event-slot is 20:
         ShowBooks(player, "helmets")
      if index of event-slot is 21:
         ShowBooks(player, "chestplates")
      if index of event-slot is 22:
         ShowBooks(player, "leggings")
      if index of event-slot is 23:
         ShowBooks(player, "boots")
      if index of event-slot is 24:
         ShowBooks(player, "elytras")

      if index of event-slot is 26:
         EnchantmentGui(player)

   if event-inventory is (metadata tag "ShowBooks" of player):
      if index of event-slot is 26:
         Info(player)

#STOPS SOME STUFF FROM HAPPENING OUT OF THE GUI
on inventory close:
   if {EnchantInv.%player%} is true:
      give player slot 11 of metadata tag "Enchant" of player
      give player slot 15 of metadata tag "Enchant" of player
   set {InvOpen.%player%} to false
   set {EnchantInv.%player%} to false

on join:
   set {LeapCD.%player%} to 0

every 1 second:
   loop all players:
      if {LeapCD.%loop-value%} is greater than 0:
         remove 1 from {LeapCD.%loop-value%}
#TOOLS
#SWORDS
#SMITE - Common, Uncommon, Rare
on damage:
   if event-damage cause is attack:
      set {chance} to random integer between 0 and 100
      if the lore of the attacker's tool contains "Smite I":
         if {chance} is smaller than 10:
            strike lightning at the victim
      else if the lore of the attacker's tool contains "Smite II":
         if {chance} is smaller than 20:
            strike lightning at the victim
      else if the lore of the attacker's tool contains "Smite III":
         if {chance} is smaller than 35:
            strike lightning at the victim
#REAP - Uncommon, Rare, Epic
on damage:
   if event-damage cause is attack:
      set {reap} to random integer between 0 and 100
      if the lore of the attacker's tool contains "Reap I":
         if {reap} is smaller than 5:
            add 1 to the health of the attacker
      else if the lore of the attacker's tool contains "Reap II":
         if {reap} is smaller than 10:
            add 1 to the health of the attacker
      else if the lore of the attacker's tool contains "Reap III":
         if {reap} is smaller than 20:
            add 1 to the health of the attacker
#BLEED - Uncommon, Rare, Epic
on damage:
   if event-damage cause is attack:
      if the lore of the attacker's tool contains "Bleed I":
         wait 1 second
         damage victim by 0.5 hearts
      else if the lore of the attacker's tool contains "Bleed II":
         loop 2 times:
            wait 1 second
            damage victim by 0.5 hearts
      else if the lore of the attacker's tool contains "Bleed III":
         loop 3 times:
            wait 1 second
            damage victim by 0.5 hearts
#BLOODLUST - Rare, Epic, Legendary
on death:
   if event-damage cause is attack:
      if victim isn't player:
         if the lore of the attacker's tool contains "Bloodlust I":
            apply strength without particles to attacker for 10 seconds
            apply speed without particles to attacker for 15 seconds
         else if the lore of the attacker's tool contains "Bloodlust II":
            apply strength without particles to attacker for 20 seconds
            apply speed without particles to attacker for 20 seconds
         else if the lore of the attacker's tool contains "Bloodlust III":
            apply strength 2 without particles to attacker for 30 seconds
            apply speed without particles to attacker for 35 seconds
            add 1 to the health of the attacker
#CRIPPLE - Common, Uncommon
on damage:
   if event-damage cause is attack:
      set {chance} to random integer between 0 and 100
      if the lore of the attacker's tool contains "Cripple I":
         if {chance} is smaller than 10:
            apply slowness without particles to victim for 3 seconds
      else if the lore of the attacker's tool contains "Cripple II":
         if {chance} is smaller than 20:
            apply slowness without particles to victim for 8 seconds
#BUTCHER - Common, Uncommon, Rare
on death:
   if event-damage cause is attack:
      if the lore of the attacker's tool contains "Butcher I":
         set {ButcherAmount} to 1
      else if the lore of the attacker's tool contains "Butcher II":
         set {ButcherAmount} to 2
      else if the lore of the attacker's tool contains "Butcher III":
         set {ButcherAmount} to 3
      if the lore of the attacker's tool contains "Butcher I" or "Butcher II" or "Butcher III":
         if victim is an animal:
            if victim is a cow:
               loop {ButcherAmount} times:
                  drop 1 raw beef
            if victim is a chicken:
               loop {ButcherAmount} times:
                  drop 1 raw chicken
            if victim is a pig:
               loop {ButcherAmount} times:
                  drop 1 raw porkchop
            if victim is a sheep:
               loop {ButcherAmount} times:
                  drop 1 raw mutton
            if victim is a rabbit:
               loop {ButcherAmount} times:
                  drop 1 raw rabbit
#RAGE - Epic, Legendary
on damage:
   if event-damage cause is attack:
      if the lore of the attacker's tool contains "Rage I" or "Rage II":
         set {Ragehealth} to max health of attacker - health of attacker
         if the lore of the attacker's tool contains "Rage I":
            increase damage by {Ragehealth} / 2
         else if the lore of the attacker's tool contains "Rage II":
            increase damage by {Ragehealth}
#BOW
#POISON - Common, Uncommon, Rare
on damage:
   if the lore of the attacker's tool contains "Poison I":
      Poison the victim for 2 seconds
   else if the lore of the attacker's tool contains "Poison II":
      Poison the victim for 3 seconds
   else if the lore of the attacker's tool contains "Poison III":
      Poison the victim for 5 seconds

#THUNDERSTORM - Legendary
on shoot:
   if the lore of the shooter's tool contains "Thunderstorm":
      set {es.%projectile%} to 1
      if projectile is an arrow:
         wait 5 ticks
         loop 100 times:
            if {es.%projectile%} is 1:
               strike lightning at the projectile
               wait 5 ticks
            else:
               stop loop
on projectile hit:
   if projectile is an arrow:
      set {es.%projectile%} to 0
on damage:
   if projectile is an arrow:
      if the lore of the attacker's tool contains "Thunderstorm":
         set {es.%projectile%} to 0
         loop 10 times:
            strike lightning at the victim
            wait 6 ticks

#VELOCITY - Common, Uncommon, Rare
on shoot:
   if projectile is an arrow:
      set {VelocityMultiplier} to 1
      if the lore of the shooter's tool contains "Velocity I":
         Set {VelocityMultiplier} to 1.5
      else if the lore of the shooter's tool contains "Velocity II":
         Set {VelocityMultiplier} to 2
      else if the lore of the shooter's tool contains "Velocity III":
         Set {VelocityMultiplier} to 2.5
      cancel event
      set {VelocityVelocity} to Velocity of projectile 
      set x of {VelocityVelocity} to x of {VelocityVelocity} * {VelocityMultiplier}
      set y of {VelocityVelocity} to y of {VelocityVelocity} * {VelocityMultiplier}
      set z of {VelocityVelocity} to z of {VelocityVelocity} * {VelocityMultiplier}
      set Velocity of projectile to {VelocityVelocity}
      uncancel event
#CROSSBOW
#TRIDENT
#STORM - epic, legendary
on damage:
   set {StormName} to name of projectile
   if projectile is an trident:
      if the lore of the attacker's tool contains "Storm I" or "Storm II":
         if the lore of the attacker's tool contains "Storm I":
            set {StormAmount} to 100
         else if the lore of the attacker's tool contains "Storm II":
            set {StormAmount} to 200
         
         if {StormName} isn't "Storm Trident":
            loop {StormAmount} times:
               spawn trident 30 blocks above the victim
               set name of last spawned trident to "Storm Trident"
               set {StormRandomX} to a random integer between -50 and 50
               set {StormRandomZ} to a random integer between -50 and 50 
               set velocity of last spawned trident to vector {StormRandomX}/100,-5,{StormRandomZ}/100
               wait 1 ticks
   if {StormName} is "Storm Trident":
      strike lightning at the victim
#SHIELD
#PICKAXE
#EXCAVATOR
on block break:
   if the lore of the player's tool contains "Excavator I" or "Excavator II" or "Excavator III":
      if Player's held item's durability is greater than max durability of player's tool:
         stop
      else:
         if player is holding a pickaxe:
            set {ExcavatorPos} to event-block's location
            break block at {ExcavatorPos}
            if the lore of the player's tool contains "Excavator I":
               loop blocks in radius 1 around {ExcavatorPos}:
                  break loop-block
                  if player's gamemode isn't creative:
                     Remove -1 from Player's held item's durability
            else if the lore of the player's tool contains "Excavator II":
               loop blocks in radius 2 around {ExcavatorPos}:
                  break loop-block
                  if player's gamemode isn't creative:
                     Remove -1 from Player's held item's durability
            else if the lore of the player's tool contains "Excavator III":
               loop blocks in radius 3 around {ExcavatorPos}:
                  break loop-block
                  if player's gamemode isn't creative:
                     Remove -1 from Player's held item's durability
         if Player's held item's durability is greater than max durability of player's tool:
            stop
#LEAP - Rare, Epic
on right click with axe:
   if the lore of the player's tool contains "Leap I" or "Leap II":
      if {LeapCD.%player%} is 0:
         set {LeapCD.%player%} to 10
         if the lore of the player's tool contains "Leap I":
            push the player in the Direction of the player at speed 2
         else if the lore of the player's tool contains "Leap II":
            push the player in the Direction of the player at speed 4
      else:
         send action bar "Leap is on a %{LeapCD.%player%}% CD" to player
#SHOVEL
#HOE
#REPLANT
on block break:
   if the lore of the player's tool contains "Replant":
      if event-block is a ripe potato plant:
         if player's inventory contains "potato" parsed as itemtype:
            set location of event-block to potato plant
            remove 1 potato from the player's inventory
      else if event-block is a ripe carrot plant:
         if player's inventory contains "carrot" parsed as itemtype:
            set location of event-block to carrot plant
            remove 1 carrot from the player's inventory
      else if event-block is a ripe wheat plant:
         if player's inventory contains "wheat seeds" parsed as itemtype:
            set location of event-block to wheat plant
            remove 1 wheat seeds from the player's inventory
      else if event-block is a ripe beetroot plant:
         if player's inventory contains "beetroot seeds" parsed as itemtype:
            set location of event-block to beetroot plant
            remove 1 beetroot seeds from the player's inventory
      else if event-block is a ripe nether wart plant:
         if player's inventory contains "nether wart" parsed as itemtype:
            set location of event-block to nether wart plant
            remove 1 nether wart from the player's inventory
#FISHING ROD
#ARMOR
#REPAIR
on death:
   if the lore of the attacker's helmet contains "Replenish":
      add -100 to the durability of the attacker's helmet
   if the lore of the attacker's chestplate contains "Replenish":
      add -100 to the durability of the attacker's chestplate
   if the lore of the attacker's leggings contains "Replenish":
      add -100 to the durability of the attacker's leggings
   if the lore of the attacker's boots contains "Replenish":
      add -100 to the durability of the attacker's boots
#HELMET
#SUPERVISION - Common
every 1 second:
   loop all players:
      if the lore of the loop-player's helmet contains "SuperVision":
         apply night vision without particles to loop-player for 30 seconds
#CHESTPLATE
#TANK - Rare, Epic, Legendary
every 1 second:
   loop all players:
      if the lore of the loop-player's chestplate contains "Tank I":
         set max health of the loop-player to 12
      else if the lore of the loop-player's chestplate contains "Tank II":
         set max health of the loop-player to 14
      else if the lore of the loop-player's chestplate contains "Tank III":
         set max health of the loop-player to 16
      else:
         set max health of the loop-player to 10
#REVENGE - Epic
on death:
   if the lore of the victim's chestplate contains "Revenge":
      set {RevengeX::*} to 0, 0, 0.15, -0.15, 0.1, 0.1, -0.1, -0.1
      set {RevengeZ::*} to 0.15, -0.15, 0, 0, 0.1, -0.1, 0.1, -0.1
      loop 8 times:
         spawn tnt at the victim
         set the name of the last spawned tnt to "Revenge TNT"
         set the Velocity of the last spawned tnt to vector {RevengeX::%loop-value%},0.5,{RevengeZ::%loop-value%}
on explode:
   set {RevengeName} to name of event-entity
   if {RevengeName} is "Revenge TNT":
      cancel event
      play huge explosion at position of event-entity
on damage:
   if attacker is tnt:
      set {RevengeName} to name of attacker
      if {RevengeName} is "Revenge TNT":
         if victim is a dropped item:
            cancel event
#LEGGINGS
#HEALTHY - Epic
every 1 second:
   loop all players:
      if the lore of the loop-player's leggings contains "Healthy":
         apply regeneration without particles to loop-player for 1 second
#BOOTS
#SONIC - Uncommon, Rare
every 1 second:
   loop all players:
      if the lore of the loop-player's boots contains "Sonic I":
         apply speed without particles to loop-player for 2 second
      else if the lore of the loop-player's boots contains "Sonic II":
         apply speed 2 without particles to loop-player for 2 second
#BUNNY - Common
every 1 second:
   loop all players:
      if the lore of the loop-player's boots contains "Bunny":
         apply jump boost without particles to loop-player for 1 second
#ELYTRA

on damage:
   send "you did %damage% damage" to attacker
